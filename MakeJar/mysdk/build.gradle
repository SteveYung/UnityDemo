apply plugin: 'com.android.library'

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.0"
    lintOptions {
        abortOnError false
    }

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main  {
            // Here is the path to your source code
            java {
                srcDir 'src'
            }
        }
    }

}

//task makeJar(type: Copy) {
//    delete 'build/libs/test.jar'
//    from('build/intermediates/bundles/release/')
//    into('build/libs/')
//    include('classes.jar')
//    rename('classes.jar', 'android.jar')
//}
//
//makeJar.dependsOn(build)

task clearJar(type: Delete) {
    delete 'build/libs/mySdk.jar'////这行表示如果你已经打过一次包了，再进行打包则把原来的包删掉
}

task makeJar(type: Copy) {
    from('build/intermediates/bundles/default/') //这行表示要打包的文件的路径，根据下面的内容，其实是该路径下的classes.jar
    into('build/libs/')  //这行表示打包完毕后包的生成路径，也就是生成的包存在哪
    include('classes.jar')  //看到这行，如果你对分包有了解的话，你就可以看出来这行它只是将一些类打包了
    rename ('classes.jar', 'mySdk.jar')
}

makeJar.dependsOn(clearJar, build)


dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:appcompat-v7:26.+'
    compile files('libs/unity-classes.jar')
    //    compile project(':adlib')
    compile 'com.google.android.gms:play-services-auth:11.0.1'
    compile 'com.google.android.gms:play-services-base:11.0.1'
    compile 'com.google.android.gms:play-services-location:11.0.1'
    compile 'com.google.android.gms:play-services-games:11.0.1'
}
